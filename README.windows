Instructions on building the Spectral source code on Windows 32-bit/64-bit.
---------------------------------------------------------------------------

Programs that need to be installed before building the source code:
-----------------------------------------------------------------------
- Visual Studio 2010 (specifically Visual C++)
     - Please note that this can be any edition of Visual C++: Express
       Edition, Professional Edition, and Team Edition will all work.
     - Also note that Visual C++ 2010 must be used; neither earlier nor
       later versions will work (including service packs).
- Python 2.X, specifically 2.5 or later (http://www.python.org/download/)
- Java 1.4.X or later
- Subversion Command Line Client
  (http://downloads.open.collab.net/collabnet-subversion.html)
- Compatible Opticks SDK

Download these required dependencies:
---------------------------------------------------
The Dependencies folder in the checkout folder contains a system which
automatically downloads the appropriate dependencies.  This system requires
Java 1.4.X or later.
> dependencies -p
will provide a usage summary.   Most of the time, you should use
retrieve-dependencies.
> retrieve-dependencies
This will download the appropriate dependencies builds and will install them
in the proper directories.

Point the SPECTRALDEPENDENCIES environment variable at the Dependencies
folder so the build system can find the installed dependencies.

Configure Spectral to find the Opticks SDK:
---------------------------------------------------
1. Unzip a compatible Opticks SDK
2. Set the OPTICKS_CODE_DIR environment variable to the directory
   where the SDK was unzipped.

How to compile Spectral in Visual Studio
---------------------------------------------------
1. Open the Spectral solution.  To get to the Spectral source code in Visual
   Studio, open the Spectral.sln file in Visual Studio.  This should be located
   in the application folder.
2. To build Spectral first select your desired configuration, either
   "Debug|Win32", "Release|Win32", "Debug|x64", "Release|x64" in the
   Visual Studio Configuration Manager.  If you are using the Express edition
   of Visual C++, you will not able to see the "Debug|x64" or "Release|x64"
   configurations because of inherent limitations in the Express edition.
   Select to build the entire Solution.  You may encounter build warnings,
   but there should not be any build errors.

How to run Spectral in Visual Studio
---------------------------------------------------
1. Set the OPTICKS_HOME environment variable to point to an installed
   version of Opticks.  If you are running Spectral 32-bit, this
   will need to be a 32-bit Opticks install.  If you are running
   Spectral 64-bit, this will need to be a 64-bit Opticks install.
2. You will need to prepare your build directory for execution. Manually build
   the SpectralMgr project by selecting Build from the right click context
   menu for the project in the Solution Explorer. This will copy needed files
   from the Opticks SDK to the Spectral build directory. This step needs to
   be performed for each Visual Studio configuration separately if you want
   to execute each configuration. This only needs to be perform once unless
   you make changes to the Opticks SDK or remove the Spectral Build directory.
3. Once the preparation step is complete, run the SpectralMgr project which
   should be the default (bold in the Solution Explorer). Opticks will
   execute with the Spectral extension available.
